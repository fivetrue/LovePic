package com.fivetrue.lovepic.fragment.login;

import android.app.Activity;
import android.net.Uri;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import com.facebook.Session;
import com.facebook.SessionState;
import com.facebook.UiLifecycleHelper;
import com.fivetrue.lovepic.R;

import java.util.Arrays;

public class LoginFragment extends Fragment {

    private static String TAG = "LoginFragment";

    private Session.StatusCallback mFacebookStatusCallback = null;
    private UiLifecycleHelper mUiHelper = null;

    public LoginFragment() {
        // Required empty public constructor
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        mUiHelper = new UiLifecycleHelper(getActivity(), mStatusCallback);
        mUiHelper.onCreate(savedInstanceState);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        return inflater.inflate(R.layout.fragment_login, container, false);
    }


    @Override
    public void onAttach(Activity activity) {
        super.onAttach(activity);
    }

    @Override
    public void onDetach() {
        super.onDetach();
    }

    public void setFaceBookStatusCallback(Session.StatusCallback callback){
        mFacebookStatusCallback = callback;
    }

    private void doLogin(){
        if(getActivity() != null){
            Session session = Session.getActiveSession();
            if(session.isOpened() && !session.isClosed()){
                session.openForRead(new Session.OpenRequest(this).setPermissions(Arrays.asList("public_profile"))
                        .setCallback(mStatusCallback));
            }else{
                session.openActiveSession(getActivity(), this, true, mStatusCallback);
            }
        }
    }

    private Session.StatusCallback mStatusCallback = new Session.StatusCallback() {
        @Override
        public void call(Session session, SessionState state, Exception exception) {
            if(mFacebookStatusCallback != null){
                mFacebookStatusCallback.call(session, state, exception);
            }
            onSessionStateChange(session, state, exception);
        }
    };

    private void onSessionStateChange(Session session, SessionState state, Exception exception) {
        if (state.isOpened()) {
            Log.i(TAG, "Logged in...");
        } else if (state.isClosed()) {
            Log.i(TAG, "Logged out...");
        }
    }
}
